# Week 3 – Day 1
I set up my first Node.js project with pnpm, confirmed I can load my API key from .env, and built scripts to fetch weather data. I started with one city, then looped through multiple, and finished by adding CLI flags with yargs. 
This feels like the JavaScript mirror of what I did in Python last week.

accomplished for W3D1

✅ Installed Node.js & pnpm
✅ Initialized a Node project
✅ Verified .env works with your OpenWeather key
✅ Wrote and ran JavaScript scripts:

weather_one_city.js → fetch 1 city’s weather
weather_variations.js → loop through multiple cities
weather_flags.js → pass cities from the CLI, control units with a flag (and .env default)

✅ Pushed everything to GitHub under API-Lab org

I will admit, I am lost with the node.js language. I really struggled understanding what was going here. 


# Learning Journal — Week 3 (Node.js)

---

## Day 16 (W3D2)
I extended my CLI tool with new outputs. Added `--json` to console, `--json-out` to write JSON to a file, and `--csv-out` to export data to CSV. Enhanced the fetch to include wind speed, country, and ISO timestamps. Also added a `--json-only` flag to suppress human-readable lines.  
**Skills learned:** JSON/CSV outputs in Node, extending objects, optional chaining, formatting timestamps.  
**Deliverables:** `weather_cli.js` (final version with all flags).

/*
BIG PICTURE — weather_cli.js

1) Imports & setup
   - Load libs, rebuild __dirname, load .env next to this file

2) Config & flags
   - Read OPENWEATHER_API_KEY
   - Parse CLI: --units, --json, --csv-out; positional city names

3) Fetch function
   - Given a city, call OpenWeather, shape a normalized result { ok, city, temp, ... }

4) Run all requests
   - Promise.all(...) to fetch all cities in parallel

5) Output
   - Human-readable lines
   - Optional: JSON (--json)
   - Optional: CSV (--csv-out)
*/

- **Day 17 (W3D3)** — Added `--cache-day` (per-day cache file), plus wind speed and ISO timestamps in outputs. Verified JSON-only export and CSV export.
